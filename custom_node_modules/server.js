/* const path = require("path");


console.log(path.sep);

const filePathLogin = path.join("./backend","login","login.js");
const filePathPayment = path.join("./backend","payment","payment.js");



console.log(filePathLogin);
console.log(filePathPayment);

const baseLogin = path.basename(filePathLogin);
const basePayment = path.basename(filePathPayment);

console.log(baseLogin);
console.log(basePayment);

const absoluteLogin = path.resolve(__dirname,"./backend","login","login.js");
const absolutePayment = path.resolve(__dirname,"./backend","payment","payment.js");

console.log(absoluteLogin);
console.log(absolutePayment); */




/* const fs = require("fs")

const first = fs.readFileSync("./filesystem/text/text1.txt", "utf8")
const second = fs.readFileSync("./filesystem/text/text2.txt", "utf8") */



//The above can be destructure like this below

const {readFileSync, writeFileSync} = require("fs")

const first = readFileSync("./filesystem/text/text1.txt", "utf8");
const second = readFileSync("./filesystem/text/text2.txt", "utf8");
const third = readFileSync("./filesystem/text/text3.txt", "utf8");

console.log(first)
console.log(second)
console.log(third) 
 
/* 
The below will overwrite any existing file with the same name
 writeFileSync("./filesystem/text/text3.txt", `I am the third text, the first text content is: ${first} and the second text content is: ${second}

`) 

 */

/* However the below will append to the existing file with the same name
  writeFileSync("./filesystem/text/text3.txt", `I am the third text, the first text content is: ${first} and the second text content is: ${second}

`, {flag: "a"})  
 */
